
@{
    ViewData["Title"] = "Detail";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model (Ecomerece_Web.Data.Product product, List<Ecomerece_Web.Data.Product> listCarousel)
<div class="PageLayout_PageAlignment">
    <div class="Hero_Wrapper ProductTemplatePage_Hero">
        <div class="Hero_FirstPane">
            <div class="ProductTemplatePage_ReleaseIndicator">
                <div class="GridCellReleaseDateIndicator_Label"><span>@Model.product.releaseDate.ToString("yyyy’-‘MM’-‘dd")</span></div>
            </div>
            <div class="ProductImageCarousel_Wrapper goat-scroll">
                @foreach (var i in Model.product.images)
                {
                    <div class="ProductImageCarousel_DesktopImageWrapper">
                        <img alt="@Model.product.productNameID"
                             sizes="30vw" src="/utility/@i.imageNameID" class="sc-htpNat">
                    </div>
                }
            </div>
            <nav class="ProductTemplateBreadcrumbs_Wrapper">
                <a class="ProductTemplateBreadcrumbs_Crumb ProductTemplateBreadcrumbs_BrandCrumb"
                   href="~/Product/@Model.product.brand.brandNameID"> @Model.product.brand.brandNameID</a><span> / </span>
                <span class="ProductTemplateBreadcrumbs_Crumb" >@Model.product.silhouette.silhouetteNameID</span><span class="ProductTemplateBreadcrumbs_ProductName">
                    / @Model.product.productNameID
                </span>
            </nav>
        </div>
        <div class="Hero_SecondPane">
            <div class="Hero_HeroPane ProductTitlePane_Container">
                <div class="Hero_HeroPaneContent">
                    <button class="ProductWantButton_Button">Want</button>
                    <h1 class="ProductTitlePane_Title">
                        @Model.product.productNameID
                    </h1>
                </div>
                <nav class="Hero_HeroPaneActions">
                    <span class="Hero_Border">
                        <button type="button" class="nashButton_Wrapper Hero_Button ProductTitlePaneActions_LeftHeroButton">
                            <div class="ProductTitlePaneActions_ButtonTextWrapper AnimatedUnderlineText">
                                <a href="#">
                                    Buy New &nbsp;-&nbsp; $@Model.product.price
                                </a>
                            </div>
                        </button>
                    </span><span class="Hero_Border">
                        <button type="button" class="nashButton_Wrapper Hero_Button ProductTitlePaneActions_LeftHeroButton">
                            <div class="ProductTitlePaneActions_ButtonTextWrapper AnimatedUnderlineText">
                                <a href="#">
                                    Buy Used &nbsp;-&nbsp; $@Model.product.usedPrice
                                </a>
                            </div>
                        </button>
                    </span>
                </nav>
            </div>
        </div>
    </div>
    <div class="DetailsArrow_Wrapper" onclick="scrollToDetail()">
        <button class="DetailsArrow_Button">
            <span>Details</span><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 8.33 5" width="10px" height="10px" class="arrow pointer DetailsArrow_Arrow"
                                     style="transform: rotate(-180deg);">
                <polyline points="1.17 4.25 4.17 1.25 7.17 4.25" fill="none" stroke="#0b0b0b" stroke-miterlimit="10"
                          stroke-width="1.5"></polyline>
            </svg>
        </button>
    </div>
    <div class="ProductStory_Wrapper" id="ProductDetail">
        <h2 class="ProductStory_Title">Product Details</h2>
        <p class="ProductStory_Story">
            @Model.product.story
        </p>
    </div>
    <div class="Divider_Dash"></div>
    <div class="ModuleSection NutritionalFacts_Wrapper">
        <div class="SideScrollingCarousel_Navigation">
            <button onclick="scrollXRight('ProductNutritional')" class="LeftRightButtons_NavigationButton LeftRightButtons_LeftButtonStyled">
                <svg version="1.1" xlmns="http://www.w3.org/2000/svg" xlmnsxlink="http://www.w3.org/1999/xlink"
                     class="" width="4px" height="8px" viewBox="0 0 11 17">
                    <title>Left Caret</title>
                    <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" opacity="1">
                        <g transform="translate(-77.000000, -50.000000)" stroke="#0b0b0b" stroke-width="2">
                            <polyline transform="translate(83.038462, 58.500000) rotate(-180.000000) translate(-83.038462, -58.500000)"
                                      points="79 51 87.0769231 58.7039082 79 66"></polyline>
                        </g>
                    </g>
                </svg>
            </button><button onclick="scrollXLeft('ProductNutritional')" class="LeftRightButtons_NavigationButton LeftRightButtons_RightButtonStyled">
                <svg version="1.1" xlmns="http://www.w3.org/2000/svg" xlmnsxlink="http://www.w3.org/1999/xlink"
                     class="" width="4px" height="8px" viewBox="0 0 11 17">
                    <title>Right Caret</title>
                    <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                        <g transform="translate(-118.000000, -50.000000)" stroke="#0b0b0b" stroke-width="2">
                            <polyline transform="translate(123.038462, 58.500000) rotate(-360.000000) translate(-123.038462, -58.500000) "
                                      points="119 51 127.076923 58.7039082 119 66"></polyline>
                        </g>
                    </g>
                </svg>
            </button>
        </div>
        <div class="SideScrollingCarousel_Carousel NutritionalFacts_Carousel hide-scroll" id="ProductNutritional">
            <div class="NutritionalFacts_FactWrapper">
                <a class="FactLinkWrapper_StyledLink" href="#">
                    <div class="Fact_Wrapper">
                        <div class="Fact_Details">
                            <span class="Fact_Label">Brand</span><span class="Fact_Value">
                                @Model.product.brand.brandNameID
                            </span>
                        </div>
                    </div>
                </a>
            </div>
            <div class="NutritionalFacts_FactWrapper">
                <div class="Fact_Wrapper">
                    <div class="Fact_Details">
                        <span class="Fact_Label">
                            Release
                            Date
                        </span><span class="Fact_Value">@Model.product.releaseDate.ToString("yyyy-MM-dd")</span>
                    </div>
                </div>
            </div>
            @if (!String.IsNullOrEmpty(Model.product.upperMaterial))
            {
                <div class="NutritionalFacts_FactWrapper">
                    <a class="FactLinkWrapper_StyledLink" href="#">
                        <div class="Fact_Wrapper">
                            <div class="Fact_Details">
                                <span class="Fact_Label">
                                    Upper
                                    Material
                                </span><span class="Fact_Value">@Model.product.upperMaterial</span>
                            </div>
                        </div>
                    </a>
                </div>
            }
            <div class="NutritionalFacts_FactWrapper">
                <a class="FactLinkWrapper_StyledLink" href="#">
                    <div class="Fact_Wrapper">
                        <div class="Fact_Details">
                            <span class="Fact_Label">
                                Main
                                Color
                            </span><span class="Fact_Value">@Model.product.color.colorNameID</span>
                        </div>
                    </div>
                </a>
            </div>
            <div class="NutritionalFacts_FactWrapper">
                <div class="Fact_Wrapper">
                    <div class="Fact_Details">
                        <span class="Fact_Label">Colorway</span><span class="Fact_Value">
                            @Model.product.colorWay
                        </span>
                    </div>
                </div>
            </div>
            @if (Model.product.silhouette != null)
            {
                <div class="NutritionalFacts_FactWrapper">
                    <a class="FactLinkWrapper_StyledLink" href="#">
                        <div class="Fact_Wrapper">
                            <div class="Fact_Details">
                                <span class="Fact_Label">Silhouette</span><span class="Fact_Value">
                                    @Model.product.silhouette.silhouetteNameID
                                </span>
                            </div>
                        </div>
                    </a>
                </div>
            }
            <div class="NutritionalFacts_FactWrapper">
                <a class="FactLinkWrapper_StyledLink" href="#">
                    <div class="Fact_Wrapper">
                        <div class="Fact_Details"><span class="Fact_Label">Category</span><span class="Fact_Value">@Model.product.category.categoryNameID</span></div>
                    </div>
                </a>
            </div>
        </div>
    </div>
    <div class="Divider_Dash"></div>

    @*@await Component.InvokeAsync("ProductCarousel", Model.listCarousel)*@

    <div class="align-center-justify-center full-width" style="height: 90px;">
        <p onclick="backToTop()" class="plainmedium10caps  underline-hover pointer" style="margin: 0;margin-right: 6px;">
            BACK
            TO TOP
        </p><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 8.33 5" width="10px" height="10px" class="arrow pointer "
                 style="transform: rotate(0deg);">
            <polyline points="1.17 4.25 4.17 1.25 7.17 4.25" fill="none" stroke="#0b0b0b" stroke-miterlimit="10"
                      stroke-width="1.5"></polyline>
        </svg>
    </div>

</div>

