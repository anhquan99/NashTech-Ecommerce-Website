<!-- body -->
@model (Ecomerece_Web.Data.Product coverProduct, List<Ecomerece_Web.Data.Product> topTrending, List<Ecomerece_Web.Data.Product> mostWanted, List<Ecomerece_Web.Data.Product> justDropped)
<div class="PageLayout_PageAlignment">
    @if (Model.coverProduct != null)
    {
        @await Component.InvokeAsync("Product", new { product = Model.coverProduct, type = "cover" })

    }
    @if (Model.justDropped != null)
    {
        @await Component.InvokeAsync("ProductCarousel", new { products = Model.justDropped, name = "Just Dropped", url = "/Home/JustDropped" })

    }
    <div class="ModuleSection ProductsYouMayLike_Wrapper">
        <div class="ModuleSectionHeader_Wrapper">
            <h3 class="ModuleSectionTitle">Top 20 Trending</h3>
            <a class="ButtonLink_Button ModuleSectionHeader_DesktopButton" asp-action="Top20Trending" asp-controller="Home"><span>See All</span></a>
        </div>
        <div class="container" style="max-width: 100%;">
            @if (Model.topTrending != null)
            {
                @for (int i = 1; i <= Model.topTrending.Count;)
                {
                    int temp = i + 4;
                    @Html.Raw("<div class='row'>");
                    for (int k = i; k < temp && k <= Model.topTrending.Count; k++, i++)
                    {
                        @await Component.InvokeAsync("Product", new { product = Model.topTrending.ElementAt(i - 1), type = "Ranking", rank = i });

                    }
                    @Html.Raw("</div>");
                }
            }
        </div>
    </div>
    @await Component.InvokeAsync("ProductCarousel", new { products = Model.mostWanted, name = "Most Wanted", url="/Home/MostWanted" })
    <div class="align-center-justify-center full-width" style="height: 90px;">
        <p onclick="backToTop()" class="plainmedium10caps  underline-hover pointer" style="margin: 0;margin-right: 6px;">
            BACK
            TO TOP
        </p><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 8.33 5" width="10px" height="10px" class="arrow pointer "
                 style="transform: rotate(0deg);">
            <polyline points="1.17 4.25 4.17 1.25 7.17 4.25" fill="none" stroke="#0b0b0b" stroke-miterlimit="10"
                      stroke-width="1.5"></polyline>
        </svg>
    </div>

</div>
